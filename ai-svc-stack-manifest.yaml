---
# Source: ai-svc-stack/templates/hf/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hf-token
  namespace: ai-stack
type: Opaque
data:
  # replace with base64 encoded value of your Hugging Face API token
  # required for fetching models from the Hugging Face model hub
  HF_API_TOKEN: aGZfTlhScnhCdHFrVWxTd2h2ZExMekVVY2h0REZuSXpXVGxa
---
# Source: ai-svc-stack/templates/hf/pvc.yaml
# Persistent Volume and Claim from NFS for HF models and cache
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hf-pvc
  namespace: ai-stack
  annotations:
    nfs.io/storage-path: "hf/hub"
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: controller-nfs
  resources:
    requests:
      storage: 50Gi
---
# Source: ai-svc-stack/templates/vectordb/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: vectordb-pvc
  namespace: ai-stack
  annotations:
    nfs.io/storage-path: "vectordb/data"
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: controller-nfs
  resources:
    requests:
      storage: 2Gi
---
# Source: ai-svc-stack/templates/tei/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: tei
  namespace: ai-stack
spec:
  selector:
    app: tei
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer
---
# Source: ai-svc-stack/templates/tgi/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: tgi
  namespace: ai-stack
spec:
  selector:
    app: tgi
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer
---
# Source: ai-svc-stack/templates/vectordb/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vectordb
  namespace: ai-stack
spec:
  selector:
    app: vectordb
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: LoadBalancer
---
# Source: ai-svc-stack/templates/tei/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tei
  namespace: ai-stack
  labels:
    app: tei
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tei
  template:
    metadata:
      labels:
        app: tei
    spec:
      containers:
        - name: tei
          image: ghcr.io/huggingface/text-embeddings-inference:latest
          command:
            [
              "text-embeddings-router",
              "--model-id",
              "BAAI/bge-large-en-v1.5",
              "--max-client-batch-size",
              "1024"
            ]
          resources:
            limits:
              nvidia.com/gpu: 1
            requests:
              nvidia.com/gpu: 1
          ports:
            - containerPort: 80
          env:
            - name: HF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hf-token
                  key: HF_API_TOKEN
            - name: RUST_BACKTRACE
              value: "full"
          volumeMounts:
            - mountPath: /data
              name: hf-hub
      volumes:
        - name: hf-hub
          persistentVolumeClaim:
            claimName: hf-pvc
---
# Source: ai-svc-stack/templates/tgi/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tgi
  namespace: ai-stack
  labels:
    app: tgi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tgi
  template:
    metadata:
      labels:
        app: tgi
    spec:
      containers:
        - name: tgi
          image: ghcr.io/huggingface/text-generation-inference:latest
          command:
            [
              "text-generation-launcher",
              "--model-id",
              "microsoft/phi-1_5",
              "--max-total-tokens=8192",
              "--max-input-tokens=8191"
            ]
          resources:
            limits:
              nvidia.com/gpu: 1
            requests:
              nvidia.com/gpu: 1
          env:
            - name: HUGGING_FACE_HUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hf-token
                  key: HF_API_TOKEN
          volumeMounts:
            - mountPath: /data
              name: hf-hub
            - mountPath: /dev/shm
              name: shm
          ports:
            - containerPort: 80
      volumes:
        - name: hf-hub
          persistentVolumeClaim:
            claimName: hf-pvc
        - emptyDir:
            medium: Memory
            sizeLimit: 1Gi
          name: shm
---
# Source: ai-svc-stack/templates/vectordb/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vectordb
  namespace: ai-stack
spec:
  replicas: 1
  replicas: 1
  selector:
    matchLabels:
      app: vectordb
  template:
    metadata:
      labels:
        app: vectordb
    spec:
      containers:
      - name: vectordb
        image: ghcr.io/chroma-core/chroma:latest
        resources:
            {}
        ports:
        - containerPort: 8000
        volumeMounts:
            - mountPath: /chroma/chroma/
              name: vectordb-pv
      volumes:
        - name: vectordb-pv
          persistentVolumeClaim:
            claimName: vectordb-pvc

