apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: insightful
  name: insightful
  namespace: ai-stack
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: insightful
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: insightful
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: insightful-env
        env:
        - name: HUGGINGFACEHUB_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: tokens
              key: HUGGINGFACEHUB_API_TOKEN
        - name: STACK_OVERFLOW_API_KEY
          valueFrom:
            secretKeyRef:
              name: tokens
              key: STACK_OVERFLOW_API_KEY
        - name: TAVILY_API_KEY
          valueFrom:
            secretKeyRef:
              name: tokens
              key: TAVILY_API_KEY
        image: ghcr.io/infracloudio/insightful:latest
        command: ["streamlit", "run", "multi_tenant_rag.py", "--server.address", "0.0.0.0"]
        imagePullPolicy: Always
        name: insightful
        ports:
        - containerPort: 8501
          protocol: TCP
        - containerPort: 3150
          protocol: TCP
        resources:
          limits:
            nvidia.com/gpu: "1"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/secrets
          name: secrets
          readOnly: true
        - name: empty
          mountPath: /tmp/
        - name: auth-config
          mountPath: /opt/auth-config
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/hostname: infracloud02
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: secrets
        secret:
          defaultMode: 420
          secretName: gh-pat
      - name: auth-config
        configMap:
          name: insightful-auth-config
      - name: empty
        emptyDir: {}
